document.addEventListener("DOMContentLoaded", function () {
  // Brand colors
  const brandColor = "#23386A"; // Navy blue primary color
  const brandLightColor = "#3A5283"; // Lighter shade for gradients
  const brandDarkColor = "#192548"; // Darker shade for depth
  const accentColor = "#FFD700"; // Gold accent
  const accentLightColor = "#FFEBA3"; // Light gold for highlights
  const highlightColor = "#FF5252"; // Attention red
  const successColor = "#00C853"; // Success green
  const backgroundColor = "#F5F7FA"; // Light background

  // States
  let animate = false;
  let activeTab = "steps";

  // Get container
  const container = document.getElementById("surepay-container");

  // Step data with descriptions
  const steps = [
    "SurePay ржЕрзНржпрж╛ржкрзЗ рж╕рж╛ржЗржи-ржЗржи-ржП ржХрзНрж▓рж┐ржХ ржХрж░рзБржи",
    "ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ ржХрзЛржб ржмрзНржпржмрж╣рж╛рж░рзЗрж░ ржирж┐рж░рзНржжрзЗрж╢ржирж╛ рж╕рзНржХрзНрж░рж┐ржирзЗ ржлрж░ржУржпрж╝рж╛рж░рзНржб ржЕрзНржпрж╛рж░рзЛ-ржП ржХрзНрж▓рж┐ржХ ржХрж░рзБржи",
    "ржПржХрж╛ржЙржирзНржЯ рж╕рж╛ржорж╛рж░рж┐ ржкрзЗржЗржЬрзЗ 'рж╕рзНржЯрзБржбрзЗржирзНржЯ ржПржХрж╛ржЙржирзНржЯ' ржЕржкрж╢ржиржЯрж┐ ржХрзНрж▓рж┐ржХ ржХрж░рзБржи",
    "рж╕рзНржЯрзБржбрзЗржирзНржЯ ржПржХрж╛ржЙржирзНржЯ ржЦрзБрж▓рждрзЗ ржорж╛рж░рзНржХрзЗржЯрж┐ржВ ржорзЗрж╕рзЗржЬ ржжрж┐ржпрж╝рзЗ 'рж╢рзБрж░рзБ ржХрж░рзБржи' ржмрж╛ржЯржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рзБржи",
    "ржбрж┐ржЬрж┐ржЯрж╛рж▓ ржЬржирзНржо рж╕ржиржжрзЗрж░ рж╕ржорж╕рзНржд рждржерзНржп ржжрж┐ржи",
    "ржЬржирзНржо рж╕ржиржж ржерзЗржХрзЗ ржпрж╛ржЪрж╛ржЗ ржХрж░рж╛ рждржерзНржпрзЗрж░ рж╕рзНржХрзНрж░рж┐ржирзЗ ржлрж░ржУржпрж╝рж╛рж░рзНржб ржЕрзНржпрж╛рж░рзЛ-ржП ржХрзНрж▓рж┐ржХ ржХрж░рзБржи",
    "ржпрзЗрж╕ржм ржлрж┐рж▓рзНржб рж╕ржорзНржкрж░рзНржХрзЗ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ рждржерзНржп ржжрж┐рждрзЗ рж╣ржмрзЗ, рж╕рзЗржЧрзБрж▓рж┐ ржлрж┐рж▓ ржХрж░рзБржи, ржпрзЗржоржи рж╕рзНржХрзБрж▓, ржХрж▓рзЗржЬ ржЗрждрзНржпрж╛ржжрж┐",
    "ржЖржмрзЗржжржирзЗрж░ рж╕ржХрж▓ рждржерзНржп ржжрж┐ржпрж╝рзЗ рж╢рзЗрж╖ ржХрж░рзБржи ржПржмржВ ржПрж╕ржПржоржПрж╕рзЗрж░ ржорж╛ржзрзНржпржорзЗ ржирж┐рж╢рзНржЪрж┐рждржХрж░ржг ржХрж░рзБржи",
  ];

  // Requirements
  const requirements = [
    {
      text: "ржЧрзНрж░рж╛рж╣ржХрзЗрж░ ржмржпрж╝рж╕ рззрзл ржПрж░ ржмрзЗрж╢рж┐ ржПржмржВ рззрзо ржПрж░ ржХржо",
      icon: "ЁЯСд",
    },
    {
      text: "ржбрж┐ржЬрж┐ржЯрж╛рж▓ ржЬржирзНржо рж╕ржиржж",
      icon: "ЁЯУД",
    },
    {
      text: "ржорж╛/ржмрж╛ржмрж╛рж░ рж╕ржХрзНрж░рж┐ржпрж╝ SurePay ржПржХрж╛ржЙржирзНржЯ",
      icon: "ЁЯСк",
    },
  ];

  // Services
  const services = [
    {
      name: "рж╕рзЗржирзНржб ржорж╛ржирж┐",
      icon: `<svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="${brandColor}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <line x1="22" y1="2" x2="11" y2="13"></line>
            <polygon points="22 2 15 22 11 13 2 9 22 2"></polygon>
          </svg>`,
    },
    {
      name: "ржкрзЗржорзЗржирзНржЯ",
      icon: `<svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="${brandColor}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <rect x="1" y="4" width="22" height="16" rx="2" ry="2"></rect>
            <line x1="1" y1="10" x2="23" y2="10"></line>
          </svg>`,
    },
    {
      name: "ржорзЛржмрж╛ржЗрж▓ рж░рж┐ржЪрж╛рж░рзНржЬ",
      icon: `<svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="${brandColor}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <rect x="5" y="2" width="14" height="20" rx="2" ry="2"></rect>
            <line x1="12" y1="18" x2="12" y2="18"></line>
            <path d="M8 6h8"></path>
          </svg>`,
    },
    {
      name: "ржПржбрзБржХрзЗрж╢ржи ржлрж┐",
      icon: `<svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="${brandColor}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"></path>
            <path d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"></path>
          </svg>`,
    },
    {
      name: "ржХрзНржпрж╛рж╢ ржЖржЙржЯ",
      icon: `<svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="${brandColor}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <rect x="2" y="6" width="20" height="12" rx="2"></rect>
            <circle cx="12" cy="12" r="3"></circle>
          </svg>`,
    },
    {
      name: "ржкрзЗ ржмрж┐рж▓",
      icon: `<svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="${brandColor}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
            <path d="M14 2v6h6"></path>
            <path d="M16 13H8"></path>
            <path d="M16 17H8"></path>
            <path d="M10 9H8"></path>
          </svg>`,
    },
  ];

  // Offers
  const offers = [
    {
      title: "рж▓ржЧржЗржи ржЖрж░ ржмрж┐рж▓ ржирзЗржЯ ржЪрж╛рж▓рж╛рж▓рзЗ",
      amount: "рзорзирзл ржмрзЛржирж╛рж╕",
      subtitle: "ржЕржлрж╛рж░ рж╕ржоржпрж╝: рзйрзж ржжрж┐ржи",
    },
    {
      title: "ржЕрзНржпрж╛ржк рззржо ржмрж╛рж░ рж▓ржЧржЗржи ржХрж░рзЗ",
      amount: "рзорзирзл ржХрзНржпрж╛рж╢ржмрзНржпрж╛ржХ",
      subtitle: "рждрж╛рзОржХрзНрж╖ржгрж┐ржХ ржХрзНржпрж╛рж╢ржмрзНржпрж╛ржХ",
    },
  ];

  // Monthly offers
  const monthlyOffers = [
    {
      month: "рззржо ржорж╛рж╕",
      amount: "рзорзлрзж ржХрзНржпрж╛рж╢ржмрзНржпрж╛ржХ",
      conditions: [
        "рзорзнрзж ржмрж╛ ржмрзЗрж╢рж┐ ржорзЛржмрж╛ржЗрж▓ рж░рж┐ржЪрж╛рж░рзНржЬрзЗ рзорзнрзл",
        "рзорзпрзжрзж ржмрж╛ ржмрзЗрж╢рж┐ ржкрзЗржорзЗржирзНржЯрзЗ рзорзнрзл",
        "рзорзорзжрзж ржмрж╛ ржмрзЗрж╢рж┐ рж░рж┐ржорж┐ржЯрзНржпрж╛ржирзНрж╕рзЗ рзорзнрзл",
      ],
    },
    {
      month: "рзиржпрж╝ ржорж╛рж╕",
      amount: "рзорзлрзж ржХрзНржпрж╛рж╢ржмрзНржпрж╛ржХ",
      conditions: [
        "рзорзнрзж ржмрж╛ ржмрзЗрж╢рж┐ ржорзЛржмрж╛ржЗрж▓ рж░рж┐ржЪрж╛рж░рзНржЬрзЗ рзорзнрзл",
        "рзорзпрзжрзж ржмрж╛ ржмрзЗрж╢рж┐ ржкрзЗржорзЗржирзНржЯрзЗ рзорзнрзл",
        "рзорзорзжрзж ржмрж╛ ржмрзЗрж╢рж┐ рж░рж┐ржорж┐ржЯрзНржпрж╛ржирзНрж╕рзЗ рзорзнрзл",
      ],
    },
  ];

  // Helper functions
  function getMobileIcon(index) {
    const iconsArray = [
      `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <rect x="5" y="2" width="14" height="20" rx="2" ry="2" />
          <line x1="12" y1="18" x2="12" y2="18" />
        </svg>`,
      `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <rect x="5" y="2" width="14" height="20" rx="2" ry="2" />
          <path d="M12 6v7l3 3" />
        </svg>`,
      `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <rect x="5" y="2" width="14" height="20" rx="2" ry="2" />
          <line x1="12" y1="6" x2="12.01" y2="6" />
          <path d="M9 18h6" />
        </svg>`,
      `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <rect x="5" y="2" width="14" height="20" rx="2" ry="2" />
          <path d="M9 14l2 2 4-4" />
        </svg>`,
    ];

    return iconsArray[index % 4];
  }

  function createSurePayLogo(size = 80) {
    return `
        <svg width="${size}" height="${size}" viewBox="0 0 300 300" class="logo ${animate ? "animate" : ""}">
          <defs>
            <linearGradient id="logoGradient" x1="0%" y1="0%" x2="100%" y2="100%">
              <stop offset="0%" stop-color="${brandColor}" />
              <stop offset="100%" stop-color="${brandLightColor}" />
            </linearGradient>
            <filter id="logoShadow" x="-20%" y="-20%" width="140%" height="140%">
              <feDropShadow dx="2" dy="2" stdDeviation="3" flood-color="${brandDarkColor}" flood-opacity="0.3"/>
            </filter>
          </defs>
          
          <!-- Stylized person with money and arrow upward -->
          <g fill="none" stroke="url(#logoGradient)" stroke-width="3.5" filter="url(#logoShadow)">
            <!-- Person figure -->
            <circle cx="100" cy="70" r="40" />
            <path d="M100 110 C60 150, 80 250, 100 280 C110 260, 130 230, 90 180" />
            <path d="M100 180 C120 210, 150 200, 180 170" />
            
            <!-- Money/Bills -->
            <rect x="170" y="170" width="60" height="40" rx="5" />
            <rect x="180" y="160" width="60" height="40" rx="5" />
            <rect x="190" y="150" width="60" height="40" rx="5" />
            <circle cx="220" cy="170" r="15" />
            
            <!-- Arrow pointing upward and rightward with animation -->
            <path d="M120 100 C160 60, 200 80, 240 40" stroke-width="4.5" />
            <path d="M230 20 L260 40 L240 70" stroke-width="4.5" />
          </g>
          
          <!-- Subtle glow effect -->
          <circle cx="150" cy="150" r="145" fill="none" stroke="${accentLightColor}" stroke-width="1.5" opacity="0.2" />
        </svg>
      `;
  }

  // Create HTML structure
  container.innerHTML = "";

  // Create Header
  const header = document.createElement("div");
  header.className = "surepay-header";
  header.innerHTML = `
      <div class="header-content">
        ${createSurePayLogo(40)}
        <h1 class="header-title">SurePay</h1>
      </div>
      <p class="header-subtitle">ржЖржкржирж╛рж░ ржЕрж░рзНржерзЗрж░ ржирж┐рж░рж╛ржкржж рж╕ржЩрзНржЧрзА</p>
    `;
  container.appendChild(header);

  // Create Tabs
  const tabsContainer = document.createElement("div");
  tabsContainer.className = "tabs-container";
  tabsContainer.innerHTML = `
      <div class="tabs-wrapper">
        <div class="tab ${
          activeTab === "requirements" ? "active" : ""
        }" data-tab="requirements">ржкрзНрж░ржпрж╝рзЛржЬржирзАржпрж╝рждрж╛</div>
        <div class="tab ${
          activeTab === "steps" ? "active" : ""
        }" data-tab="steps">ржзрж╛ржкржЧрзБрж▓рзЛ</div>
        <div class="tab ${
          activeTab === "services" ? "active" : ""
        }" data-tab="services">рж╕рзЗржмрж╛рж╕ржорзВрж╣</div>
        <div class="tab ${
          activeTab === "offers" ? "active" : ""
        }" data-tab="offers">ржЕржлрж╛рж░</div>
      </div>
    `;
  container.appendChild(tabsContainer);

  // Create Content Container
  const contentContainer = document.createElement("div");
  contentContainer.className = "content-container";
  container.appendChild(contentContainer);

  // Create Footer
  const footer = document.createElement("div");
  footer.className = "footer";
  footer.innerHTML = `
      <div class="footer-content">
        <div class="footer-brand">
          ${createSurePayLogo(30)}
          <span class="footer-name">SurePay</span>
        </div>
        <div class="footer-copyright">┬й ${new Date().getFullYear()} SurePay</div>
      </div>
    `;
  container.appendChild(footer);

  // Tab click handler
  tabsContainer.querySelectorAll(".tab").forEach((tab) => {
    tab.addEventListener("click", () => {
      activeTab = tab.dataset.tab;
      updateActiveTab();
      renderContent();
    });
  });

  // Update active tab
  function updateActiveTab() {
    tabsContainer.querySelectorAll(".tab").forEach((tab) => {
      if (tab.dataset.tab === activeTab) {
        tab.classList.add("active");
      } else {
        tab.classList.remove("active");
      }
    });
  }

  // Render steps content
  function renderStepsContent() {
    let stepsHTML = "";

    // Section Header
    stepsHTML += `
        <div class="section-header">
          <h2 class="section-title">SurePay ржЕрзНржпрж╛ржк ржжрж┐ржпрж╝рзЗ рж╕рзНржЯрзБржбрзЗржирзНржЯ ржПржХрж╛ржЙржирзНржЯ ржЦрзБрж▓рж╛рж░ ржзрж╛ржкржЧрзБрж▓рзЛ</h2>
        </div>
      `;

    // Steps
    steps.forEach((step, index) => {
      stepsHTML += `
          <div class="step-box delay-${index * 100}">
            <div class="step-container">
              <div class="step-icon-container">
                <div class="step-icon">${getMobileIcon(index)}</div>
                <div class="step-number">${index + 1}</div>
              </div>
              <div class="step-content">
                <p class="step-text">${step}</p>
              </div>
            </div>
          </div>
        `;
    });

    return stepsHTML;
  }

  // Render requirements content
  function renderRequirementsContent() {
    let requirementsHTML = "";

    // Section Header
    requirementsHTML += `
        <div class="section-header">
          <h2 class="section-title">рж╕рзНржЯрзБржбрзЗржирзНржЯ ржПржХрж╛ржЙржирзНржЯрзЗрж░ ржЬржирзНржп ржкрзНрж░ржпрж╝рзЛржЬржи</h2>
        </div>
      `;

    // Requirements
    requirements.forEach((req, index) => {
      requirementsHTML += `
          <div class="requirement-box delay-${index * 100}">
            <div class="requirement-container">
              <div class="requirement-icon">${req.icon}</div>
              <p class="requirement-text">${req.text}</p>
            </div>
          </div>
        `;
    });

    return requirementsHTML;
  }

  // Render services content
  function renderServicesContent() {
    let servicesHTML = "";

    // Section Header
    servicesHTML += `
        <div class="section-header">
          <h2 class="section-title">SurePay рж╕рзНржЯрзБржбрзЗржирзНржЯ ржПржХрж╛ржЙржирзНржЯрзЗрж░ рж╕рзЗржмрж╛рж╕ржорзВрж╣</h2>
        </div>
      `;

    // Services with Logo
    servicesHTML += `
        <div class="services-container">
          <div class="logo-wrapper">
            ${createSurePayLogo(80)}
          </div>
          
          <div class="services-wrapper delay-300">
      `;

    // Service bubbles
    services.forEach((service, index) => {
      servicesHTML += `
          <div class="service-bubble">
            <div class="service-content">
              <div class="service-icon">${service.icon}</div>
              <span class="service-name">${service.name}</span>
            </div>
          </div>
        `;
    });

    servicesHTML += `
          </div>
        </div>
      `;

    return servicesHTML;
  }

  // Render offers content
  function renderOffersContent() {
    let offersHTML = "";

    // Welcome Offer Header
    offersHTML += `
        <div class="welcome-offer">
          <h2 class="welcome-title">рж╕рзНржЯрзБржбрзЗржирзНржЯ ржПржХрж╛ржЙржирзНржЯ ржУржпрж╝рзЗрж▓ржХрж╛ржо ржЕржлрж╛рж░</h2>
          <div class="welcome-points">рззрзйрзж ржкржпрж╝рзЗржирзНржЯ</div>
        </div>
      `;

    // Regular Offers
    offersHTML += '<div class="offers-wrapper">';

    offers.forEach((offer, index) => {
      offersHTML += `
          <div class="offer-box delay-${index * 100}">
            <div class="offer-container">
              <p class="offer-title">${offer.title}</p>
              <p class="offer-amount">${offer.amount}</p>
              <p class="offer-subtitle">${offer.subtitle}</p>
            </div>
          </div>
        `;
    });

    offersHTML += "</div>";

    // Monthly Offers
    offersHTML += '<div class="offers-wrapper">';

    monthlyOffers.forEach((offer, index) => {
      offersHTML += `
          <div class="offer-box delay-${300 + index * 100}">
            <div class="monthly-offer-container">
              <!-- Corner ribbon -->
              <div class="ribbon">
                <div class="ribbon-content">${offer.month}</div>
              </div>
              
              <p class="monthly-amount">${offer.amount}</p>
              
              <div class="conditions-container">
        `;

      // Conditions
      offer.conditions.forEach((condition) => {
        offersHTML += `
            <div class="condition-item">
              <div class="condition-icon">
                <span class="condition-arrow">тЖТ</span>
              </div>
              <p class="condition-text">${condition}</p>
            </div>
          `;
      });

      offersHTML += `
              </div>
            </div>
          </div>
        `;
    });

    offersHTML += "</div>";

    return offersHTML;
  }

  // Render content based on active tab
  function renderContent() {
    let contentHTML = "";

    switch (activeTab) {
      case "requirements":
        contentHTML = renderRequirementsContent();
        break;
      case "steps":
        contentHTML = renderStepsContent();
        break;
      case "services":
        contentHTML = renderServicesContent();
        break;
      case "offers":
        contentHTML = renderOffersContent();
        break;
      default:
        contentHTML = renderStepsContent();
    }

    contentContainer.innerHTML = contentHTML;

    // Trigger animations after a short delay
    setTimeout(() => {
      animate = true;
      header.classList.add("animate");
      tabsContainer.classList.add("animate");
      footer.classList.add("animate");

      document.querySelectorAll(".section-header").forEach((el) => {
        el.classList.add("animate");
      });

      document.querySelectorAll(".step-box").forEach((el) => {
        el.classList.add("animate");
      });

      document.querySelectorAll(".requirement-box").forEach((el) => {
        el.classList.add("animate");
      });

      document.querySelectorAll(".services-wrapper").forEach((el) => {
        el.classList.add("animate");
      });

      document.querySelectorAll(".welcome-offer").forEach((el) => {
        el.classList.add("animate");
      });

      document.querySelectorAll(".offer-box").forEach((el) => {
        el.classList.add("animate");
      });

      document.querySelectorAll(".logo").forEach((el) => {
        el.classList.add("animate");
      });
    }, 100);
  }

  // Initial render
  renderContent();
});
